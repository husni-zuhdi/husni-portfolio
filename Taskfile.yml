version: '3'
dotenv:
  - '.env'

tasks:
  lint:
    summary: Run lint with clippy
    cmds:
      - cargo clippy
  test:
    summary: Run unit test with logs
    cmds:
      - RUST_LOG=debug cargo test -- --nocapture --test-threads=1
  run:
    summary: Run application with hot-reload
    cmds:
      - cargo watch -s 'tailwindcss -i ./statics/input.css -o ./statics/styles.css && export $(cat .env | xargs) && cargo run -- -release'

  sqlx-create:
    summary: Create db with sqlx
    cmds:
      - sqlx db create --database-url $DATABASE_URL
  sqlx-migrate-run:
    summary: Migrate db with sqlx
    cmds:
      - sqlx migrate run --source internal/migrations --database-url $DATABASE_URL
  sqlx-migrate-add:
    summary: Creata new migration db with sqlx. Please pass migration description too
    vars:
      DESCRIPTION: '{{index .MATCH 0}}'
    cmds:
      - sqlx migrate add --source internal/migrations --database_url $DATABASE_URL {{.DESCRIPTION}}

  docker-build:
    summary: Build Docker Image
    cmds:
      - docker build -t husni-portfolio:$(cat version.json | jq --raw-output '.version') .
  docker-run:
    summary: Run Docker Image
    cmds:
      - docker run --name husni-portfolio-$(date +'%Y-%m-%d-%H-%M-%S') -it -d -p 8080:8080 --env-file=.env husni-portfolio:$(cat version.json | jq --raw-output '.version')
  docker-compose-up:
    summary: Run application in docker compose with database
    deps:
      - tailwind-build
      - update-version
      - docker-build
    cmds:
      - |
        export $(cat .env | xargs)
        export SVC_VERSION=$(cat version.json | jq --raw-output '.version')
        cd build
        docker compose up -d
  docker-compose-down:
    summary: Teardown docker compose
    cmds:
      - |
        export $(cat .env | xargs)
        export SVC_VERSION=$(cat version.json | jq --raw-output '.version')
        cd build
        docker compose down

  tailwind-build:
    summary: Build tailwindcss
    cmds:
      - tailwindcss -i ./statics/input.css -o ./statics/styles.css
  update-version:
    summary: Update version manifest
    cmds:
      - |
        cat <<EOF> version.json
        {
          "version": "$(cat cmd/Cargo.toml| grep '^version' | awk -F '=' '{print $2}' | sed 's/[[:space:]|\"]//g')",
          "build_date": "$(date +%F)",
          "build_hash": "$(git rev-parse HEAD)"
        }
        EOF
